### ANSIBLE ###
link to Ansible books
https://mega.nz/folder/McoVmDTD#-gax2JDNcsc1eMV53GXzvg


# SSH config #
# Generate the ssh key on the master node:
root@master:~# ssh-keygen -t rsa -C "main_router SSH key"

#Then copy your public key to the servers with ssh-copy-id:
root@master:~# ssh-copy-id kk@deb01
root@master:~# ssh-copy-id kk@deb02

# Inventory #
# inventory.yamlhttps://mega.nz/folder/McoVmDTD#-gax2JDNcsc1eMV53GXzvg
 hosts:
  deb01:
   ansible_host: 1.1.1.1
  deb02:
   ansible_host: 2.2.2.1


# Playbook #
playbook.yaml

- name: My first
  hosts: myhosts
  tasks:
  - name: ping my hosts
    ansible.builtin.ping:

  - name: Print message
    ansible.builtin.debug:
     msg: Hello


--- # optional start ofthe YAML  file
# dictionary 1
konrad:
 name: Konrad K
 numer: 666
 klasa: 7D
 sex: M
 
 # dictionary 1  
 # the same using abbreviatios
konrad: {name: Konrad K, numer:666, klasa: 7D, sex: M}

 ... # end of YAML


# LISTS: standard and abreviations

--- # STANDARD start of list 01
countries:
 - PL
 - UK
 - UA
... # end of list 01

--- # ABBREVIATIONS start of list 01 
countries: ['PL','UK','UA']
 ... # end of list 01

 #  LISTS INSIDE DICTIONARIES
 # dictionary 02
--- 
konrad:
 name: Konrad K
 numer: 666
 klasa: 7D
 sex: M
 likes:
  - going
  - playing
  - sleep

monika:
 name: Monika W
 numer: 777
 klasa: 8D
 sex: F
 likes:
  - outing
  - swimming
  - sleeping

... 
# SHOWING AND HIDING NEWLINES # USING Boolean (true/false)
# dictionary 03 START   
---
konrad:
 name: Konrad K
 numer: 666
 klasa: 7D
 sex: M
 likes:
  - going
  - playing
  - sleep
 result:
  maths: 88
  chem: 99
  bio: 22
 
 passed: TRUE

 messageIncludeNewLines: |
  Congrats
  You passed
 
 messageExcludeNewLines: >
  Congrats
  You passed
 ...
# dictionary 03 END

# Printing a list of dictionaries
---
vars:
 users:
  konrad:
   name: Konrad K
   numer: 666
   klasa: 7D
   sex: M
   likes:
    - going
    - playing
    - sleep

  monika:
   name: Monika W
  numer: 777
  klasa: 8D
  sex: F
  likes:
   - outing
   - swimming
   - sleeping
tasks:
 - name: Print records
   ansible.builin.debug:
    msg: "User {{ item.key }} is {{ item.value.name }} ({{ item.value.name}})"
   loop: "{{ lookup('ansible.builtin.dict', users)}}" 
...

ansible-playbook list2.yaml -i inventory2.yaml -k -vvv

# region ### "TEORIA" ###

#region # GROUPS #

# groups within groups

[nashville]
host1
host2

[atlanta]
host3
host4

[south:children]
atlanta
nashville
host5
#endregion # GROUPS #

# region # PLAYBOOK #

# playbook.yaml #

---
- name: installation apache
  hosts: web
  become: yes

  tasks:
    - name: httpd is present
       yum:
        name: httpd
        state: latest
    - name: latests index is present
      template: 
       src: files/temp.html
       dest: /var/www/html
    - name: httpd started
      service: 
       name: httpd
       state: started

#endregion PLAYBOOK

"item potency" -Ansible knows what the state of the item should be 

#region Ansible Basics #

# variables/copy
https://rhtapps.redhat.com/promo/course/do007?segment=5


practice following 

1. variables

2. system configuration
ansible -m setup localhost |grep \"ipv4\" -A1

3. 
4.59 minute
8.00 minute COPY

# constructs #
https://rhtapps.redhat.com/promo/course/do007?segment=6

# conditions
---
- name: variable playbook test
  hosts: localhost
  
  tasks:
  - name: Install apache
    apt:
      name: apache2
      state: latest
    when: ansible_distribution == 'Debian' or
          ansible_distribution == 'Ubuntu'
  
  - name: Install httpd
    yum:
      name: httpd
      state: latest
    when: ansible_distribution == 'RedHat'
...


1.
1.23m

###





# Inventory #
inventory.yaml

myhosts:
 hosts:
  deb01:
   ansible_host: 1.1.1.1
  deb02:
   ansible_host: 2.2.2.1


# Playbook #
playbook.yaml

- name: My first
  hosts: myhosts
  tasks:
  - name: ping my hosts
    ansible.builtin.ping:

  - name: Print message
    ansible.builtin.debug:
     msg: Hello


# example ping

~/ansible/hosts.yaml 
[web]
1.1.1.1
[dns]
deb02.dupa.com


ansible  -i  ~/ansible/hosts.yaml all -m  ansible.builtin.ping  

# limit hosts to which the playbook applies
ansible-playbook -i ansible/hosts.yaml -c local ansible/mastery.yaml --limit deb12,deb11




#endregion Ansible Basics #


#endregion ### "TEORIA" ###


#region OPERATIONS order PLAY

# order in which "play"" is executed
Variable loading
Fact gathering
The pre_tasks execution
Handlers notified from the pre_tasks executionThe roles execution
The tasks execution
Handlers notified from the roles or tasks execution
The post_tasks execution
Handlers notified from the post_tasks execution


# Example

 ---
 2 - hosts: localhost
 3   gather_facts: false
 4   vars:
 5     a_var: derp
 6   pre_tasks:
 7     - name: pretask
 8       debug:
 9         msg: " a pre task "
10       changed_when: true
11       notify: say hi
12   roles:
13     - role: simple
14       derp: newval
15   tasks:
16     - name: task
17       debug:
18         msg: "a task"
19       changed_when: true
20       notify: say hiexample
21   post_tasks:
22     - name: posttask
23       debug:
24         msg: " a post task"
25       changed_when: true
26       notify: say hi
27   handlers:
28     - name: say hi
29       debug:
30         msg: hi

#endregion OPERATIONS