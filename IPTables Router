#!/bin/bash

# Definicje zmiennych dla Routera
export EXTERNAL_IP_ROUTER="88.99.213.79"
export INTERNAL_SUBNET_01="1.1.1.0/24"
export INTERNAL_IP_ROUTER="1.1.1.254"
export SSH_INTERNAL_PORT_ROUTER="22"
export SSH_EXTERNAL_PORT_ROUTER="11777"
export EXTERNAL_INTERFACE_ROUTER="ens18"
export INTERNAL_INTERFACE_ROUTER="ens19"
export ALLOWED_IPS_ROUTER=("138.199.59.0/24" "45.134.212.0/24" "85.221.131.0/24") # <--- Zastąp swoimi dozwolonymi IP dla SSH Router

# Czyszczenie istniejących reguł (ostrożnie!)
sudo iptables -F
sudo iptables -X
sudo iptables -t nat -F
sudo iptables -t nat -X

# Ustawienie domyślnych polityk (kluczowe dla bezpieczeństwa)
sudo iptables -P INPUT DROP
sudo iptables -P FORWARD DROP
sudo iptables -P OUTPUT ACCEPT

# 1. Zezwól na ICMP z INTERNAL_SUBNET_01 do Internetu
sudo iptables -A FORWARD -i $INTERNAL_INTERFACE_ROUTER -o $EXTERNAL_INTERFACE_ROUTER -s $INTERNAL_SUBNET_01 -p icmp --icmp-type any -j ACCEPT

# 2. Zezwól na przychodzące SSH do Routera (z ALLOWED_IPS_ROUTER)
for ip in "${ALLOWED_IPS_ROUTER[@]}"; do  # <--- Corrected loop syntax
  sudo iptables -A INPUT -i $EXTERNAL_INTERFACE_ROUTER -p tcp --dport $SSH_EXTERNAL_PORT_ROUTER -s "$ip" -j ACCEPT # Added quotes around $ip
done

# 4. Zezwól na ruch established i related
sudo iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
sudo iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

# 5. NAT (Masquerade) dla sieci wewnętrznej
sudo iptables -t nat -A POSTROUTING -o $EXTERNAL_INTERFACE_ROUTER -j MASQUERADE

# 6. Logowanie i blokowanie reszty ruchu (dla bezpieczeństwa)
sudo iptables -A INPUT -j LOG --log-prefix "IPTABLES_ROUTER_DROP_INPUT: "
sudo iptables -A INPUT -j DROP
sudo iptables -A FORWARD -j LOG --log-prefix "IPTABLES_ROUTER_DROP_FORWARD: "
sudo iptables -A FORWARD -j DROP

# Zapisanie reguł (ważne!)
#sudo iptables-save > /etc/iptables/rules.v4
# sudo netfilter-persistent save  # Jeśli używasz netfilter-persistent