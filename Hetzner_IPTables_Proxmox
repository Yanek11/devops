### Hetzner host IPs ###

VM traffic
	88.99.213.79	00:50:56:00:A1:75	static.79.213.99.88.clients.your-server.de

WEB Management
	88.99.213.85		static.85.213.99.88.clients.your-server.de	 

gateway
88.99.213.65


# web access and SSH - start

sudo iptables -F
sudo iptables -t nat -F

# 1. Allow established/related FIRST
sudo iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
sudo iptables -A OUTPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

# 2. Loopback
sudo iptables -A INPUT -i lo -j ACCEPT
sudo iptables -A OUTPUT -o lo -j ACCEPT

# 3. SSH and PROXMOX mappings

IP_EXTERNAL="88.99.213.85"
LOOPBACK="127.0.0.1"

SSH_PORT_EXTERNAL="666"      
SSH_PORT_INTERNAL="666"        

PROXMOX_PORT_EXTERNAL="777"
PROXMOX_PORT_INTERNAL="8006"


# Allowed SSH IP addresses (add more as needed)
ALLOWED_SSH_IPS=("138.199.59.0/24" "45.134.212.0/24" "85.221.131.0/24")

# Allowed Proxmox IP addresses (add more as needed)
ALLOWED_PROXMOX_IPS=("138.199.59.0/24" "45.134.212.0/24" "85.221.131.0/24")


# SSH Rules (with source IP restriction)
for ip in "${ALLOWED_SSH_IPS[@]}"; do
  sudo iptables -t nat -A PREROUTING -p tcp --dport $SSH_PORT_EXTERNAL -s "$ip" -j DNAT --to-destination $IP_EXTERNAL:$SSH_PORT_INTERNAL
  sudo iptables -A INPUT -p tcp --dport $SSH_PORT_INTERNAL -s "$ip" -j ACCEPT
done

# Proxmox Rules (with source IP restriction)
for ip in "${ALLOWED_PROXMOX_IPS[@]}"; do
  sudo iptables -t nat -A PREROUTING -p tcp --dport $PROXMOX_PORT_EXTERNAL -s "$ip" -j DNAT --to-destination $IP_EXTERNAL:$PROXMOX_PORT_INTERNAL
  sudo iptables -A INPUT -p tcp --dport $PROXMOX_PORT_INTERNAL -s "$ip" -j ACCEPT
done

# 6. Default policies (AFTER all other rules)
sudo iptables -P INPUT DROP
#sudo iptables -P FORWARD DROP  # Only if you're using forwardings
sudo iptables -P OUTPUT ACCEPT  # Outgoing is generally allowed



# Save the rules (important!)
    sudo apt-get install iptables-persistent
    sudo mkdir -p /etc/iptables
    sudo touch  /etc/iptables/rules.v4
    


# OPTIONAL # LOGGING SSH connections
    
    sudo iptables -N ssh_log
    
    # Log successful SSH connections (optional, but good for auditing)
    sudo iptables -A ssh_log -p tcp --dport 666 -j LOG --log-prefix "SSH_ACCEPT: " --log-level info

    # Log failed SSH connections (dropped by the default policy)
    sudo iptables -A ssh_log -p tcp --dport 666 -m state --state INVALID -j LOG --log-prefix "SSH_INVALID: " --log-level info

    # Log SSH connections dropped by an explicit DROP rule (if you have one)
    sudo iptables -A ssh_log -p tcp --dport 666 -j LOG --log-prefix "SSH_DROP: " --log-level info

    # Add a rule to the INPUT chain to jump to the logging chain for SSH traffic.
    sudo iptables -I INPUT -p tcp --dport 666 -j ssh_log

# OPTIONAL # LOGGING SSH connections  END

sudo sh -c 'iptables-save > /etc/iptables/rules.v4'
sudo netfilter-persistent save




# Create a systemd service file (e.g., /etc/systemd/system/iptables.service):
sudo nano /etc/systemd/system/iptables.service
        [Unit]
        Description=iptables firewall rules
        After=network.target
        
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/sbin/iptables-restore < /etc/iptables/rules.v4
        ExecStop=/sbin/iptables-save > /etc/iptables/rules.v4
        
        [Install]
        WantedBy=multi-user.target
# enable and start service
sudo systemctl enable iptables.service
sudo systemctl start iptables.service


# Save the rules (crucial!)
sudo iptables -save > /etc/iptables/rules.v4

# Make rules persistent (Debian/Ubuntu example)
sudo apt-get install iptables-persistent  # If not already installed
sudo iptables-persistent save




# web access and SSH - end



