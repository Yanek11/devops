
Debian router

WAN/NAT
enp1s0:  52:54:00:ba:eb:04 
    inet 192.168.100.188/24 
    brd 192.168.100.255 
    inet 192.168.100.188/24

LAN01
enp7s0 
52:54:00:59:a3:9b
1.1.1.254

LAN02
enp8s0
52:54:00:2d:69:61
2.2.2.254


###/etc/network/interfaces 
# CONFIG 


cat /etc/network/interfaces
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

source /etc/network/interfaces.d/*

# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
auto enp1s0
iface enp1s0 inet dhcp 

# The LAN01 1.1.1.0/24 network interface
auto  enp7s0
iface enp7s0 inet static
address 1.1.1.254
netmask 255.255.255.0
dns-nameserver 1.1.1.254

# The LAN02 2.2.2.0/24
auto enp8s0
iface enp8s0 inet static
address 2.2.2.254
netmask 255.255.255.0
dns-nameserver 2.2.2.254


###

# listing interfaces with and without assigned  IP 
 ip addr show | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$63,$64,$65,$66,$67,$68,$69,$70,$71,$72,$73,$74,$75,$76,$77,$78,$79,$80}' |grep -e ^[1-7] -e ^"inet" 


### changing IP config ###

sudo nano /etc/network/interfaces

# example
enp1s0: 52:54:00:af:12:4d
    inet 192.168.100.188/24 
    brd 192.168.100.255 
    inet 192.168.100.188/24m,
# example

sudo systemctl restart systemd-networkd.service 


ISO image USB
sudo dd bs=4M if=~/Downloads/debian-12.8.0-amd64-netinst.iso of=/dev/sda1 status=progress oflag=sync


diff iptables1 iptables2


### enabling NAT and IP routing

# edit /etc/sysctl.conf and uncomment the following line:

## Uncomment to enable IP forwarding
net.ipv4.ip_forward=1 

## applying sysctl.conf
sudo sysctl -p /etc/sysctl.conf

# if not installed
sudo apt install iptables-persistent

# enabling IP masquerade and NAT
sudo iptables --table nat --append POSTROUTING --out-interface enp1s0 -j MASQUERADE

# list current NAT rules
sudo iptables -t nat -L -n -v
or
sudo iptables -S

# saving iptables rules
sudo sh -c "iptables-save > /etc/iptables/rules.v4"

# searching for expr in files to check
grep -rnw '/etc/' -e 'ip_forward'j

# repeating command every 5 secs
ssh kk@1.1.1.1
until !!; do sleep 5 ; done

until ssh kk@1.1.1.1; do sleep 5 ; done


### DNS - BIND NAMED ### 

# source https://linuxconfig.org/linux-dns-server-bind-configuration

# checking if PTR is OK
sudo named-checkzone 1.1.1.in-addr.arpa /etc/bind/zones/master/db.1.1.1

# NAT SSH 
lapek => 192.168.0.12:1.1.1.1=>router01=>NAT=>1.1.1.1:22
## sudo iptables --table nat --append POSTROUTING --out-interface enp1s0 -j MASQUERADE

sudo iptables -A PREROUTING -i enp1s0 -p tcp --dport 1111 -j DNAT --to-destination 1.1.1.254
sudo iptables -A POSTROUTING -d 1.1.1.254 -o enp7s0 -p tcp --dport 22 -j SNAT --to-source 1.1.1.1 

# IP: showing info on interfaces with and without IP address assigned
 addr show | awk '{print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$63,$64,$65,$66,$67,$68,$69,$70,$71,$72,$73,$74,$75,$76,$77,$78,$79,$80}'

# admin commands
top
while sleep 3; do 
  top -b -n1 | grep init > top-output.txt
done

while sleep 3; do    top -b -n1 | grep sshd >> top-output.txt;echo "recording";echo "new line" >>top-output.txt ; done

# bulk creation of multiple folders with specific name  pattern  

mkdir Photos
[me@linuxbox ~]$ cd Photos
[me@linuxbox Photos]$ mkdir {2007..2009}-{01..12}
[me@linuxbox Photos]$ ls
2007-01 2007-07 2008-01 2008-07 2009-01 2009-07
2007-02 2007-08 2008-02 2008-08 2009-02 2009-08
2007-03 2007-09 2008-03 2008-09 2009-03 2009-09
2007-04 2007-10 2008-04 2008-10 2009-04 2009-10
2007-05 2007-11 2008-05 2008-11 2009-05 2009-11
2007-06 2007-12 2008-06 2008-12 2009-06 2009-12

# file properties of cp command 
ls -l $(which cp)

# properties of files/folders located under /usr/bin with zip in their names
file $(ls -d /usr/bin/* |grep zip)

# Debian replacement for syslog
journalctl -u syslog

# creating HOME dir for existing user
mkhomedir_helper username


# running ping in background output to file ping1, session logged out, monitoring the ping results (ping1) via another
session

# START
login session 1
ping 8.8.8.8 > ping1  &
logout

login session  2
while sleep 10 ;do tail -n 1 ping 1;done
# END

# creating multiple directories and files
mkdir -p playground/dir-{001..100}
touch playground/dir-{001..100}/file-{A..Z} -type

# SEARCHING

# FIND
  find ~ -type f -name "name.ext" -size +1M

# supressing errors / permission denied
 find / -type f -name "*.qcow2" -size +1M 2>/dev/null

# LS
# lists all folders in a current location containing s and their content
ls *s*

# GREP colored output 
man grep |grep color -A5  -B1 --color

# list largest directories 

# removing all spaces from a file
cat results_ls |tr -s " "

# lists files only tak jak LS
find ~ -maxdepth 1 -type f -ls
###
kk@router01:~$ find ~ -maxdepth 1 -type f -ls
   131318      4 -rw-r--r--   1 kk       kk            807 Nov 15 17:20 /home/kk/.profile
   132588     44 -rw-r--r--   1 kk       kk          37750 Dec 11 11:28 /home/kk/ping1
   132015      0 -rw-r--r--   1 kk       kk              0 Nov 15 17:48 /home/kk/.sudo_as_admin_successful
###

# moving files that are not hidden (.) and match a pattern "r*", depth 1 level 
find ~  -maxdepth 1 -type f  -not -name ".*" -name "r*" -exec mv -t ./various/ {} +

# selecting files only . omiting hidden files (./.) and (.) 

### example data ###
k@router01:~$ du --max-depth=1
8	./.config
12	./.local
12	./diff
412	./t1
2356	./various
8	./files
4336	./test
12	./.ssh
7236	.
### example data ###


#  final version sorted by size
du  --human-readable --exclude="./.*"  --exclude="/.///." --max-depth=1 |grep   /. | tr -d "\.\/"  |awk '{print $2,$1}' |sort --key=hh2 --sort=human-numeric

# same but not including root folder 
du /etc/*  --human-readable --exclude="./.*"  --exclude="/.///." --max-depth=1 |grep   /. | tr -d "\.\/"  |awk '{print $2,$1}' |sort --key=2 --sort=human-numeric 

#same but folders path included , tr command  removed
sudo du /etc/*  --human-readable --exclude="./.*"  --exclude="/.///."  |grep   /.  |awk '{print $2,$1}' |sort --key=2 --sort=human-numeric 

# shows largets folders with long paths
# changed code 
# awk  -v RS='\n' -F'|' '{print $2,$1}' 

sudo du /home/kk/Documents/Videos\ And\ Photos/Canon\ Camera/22\ May\ 2023/DCIM/  --human-readable --exclude="./.*"  --exclude="/.///."  |grep   /.  |awk  -v RS='\n' -F'|' '{print $2,$1}'  |sort --key=2 --sort=human-numeric 

# delete folders with spaces in name
rm /home/kk/Documents//Videos\ And\ Photos/Canon\ Camera/

# showing only dirs starting with "/sys"
mount |awk '{print $3,$1}' |grep ^\/sys\/

# getting info from jpournalctl (instead of syslog). priting all records about DHCP . swapping date columns to putday  before month.  columns 2,1,3,6 and all columns to the right of 6
sudo journalctl |tail -n 100 |grep -v sudo |grep dhclient| awk '{printf "%s %s %s ", $2,$1,$3,$6; for (i=6;i<=NF; i++) {printf "%s ",$i};print ""  }' 


### ANSIBLE ###
# SSH config
Generate the ssh key on the master node:

root@master:~# ssh-keygen -t rsa -C "main_router SSH key"
Then copy your public key to the servers with ssh-copy-id:

root@master:~# ssh-copy-id kk@deb01
root@master:~# ssh-copy-id kk@deb02

# Inventory #
inventory.yaml

myhosts:
 hosts:
  deb01:
   ansible_host: 1.1.1.1
  deb02:
   ansible_host: 2.2.2.1


# Playbook #
playbook.yaml

- name: My first
  hosts: myhosts
  tasks:
  - name: ping my hosts
    ansible.builtin.ping:

  - name: Print message
    ansible.builtin.debug:
     msg: Hello



